# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Cours(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, titre: str=None, discipline: str=None, tags: List[str]=None):  # noqa: E501
        """Cours - a model defined in Swagger

        :param id: The id of this Cours.  # noqa: E501
        :type id: str
        :param titre: The titre of this Cours.  # noqa: E501
        :type titre: str
        :param discipline: The discipline of this Cours.  # noqa: E501
        :type discipline: str
        :param tags: The tags of this Cours.  # noqa: E501
        :type tags: List[str]
        """
        self.swagger_types = {
            'id': str,
            'titre': str,
            'discipline': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'titre': 'titre',
            'discipline': 'discipline',
            'tags': 'tags'
        }
        self._id = id
        self._titre = titre
        self._discipline = discipline
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt) -> 'Cours':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Cours of this Cours.  # noqa: E501
        :rtype: Cours
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Cours.

        Identifiant unique du cours  # noqa: E501

        :return: The id of this Cours.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Cours.

        Identifiant unique du cours  # noqa: E501

        :param id: The id of this Cours.
        :type id: str
        """

        self._id = id

    @property
    def titre(self) -> str:
        """Gets the titre of this Cours.

        Titre du cours  # noqa: E501

        :return: The titre of this Cours.
        :rtype: str
        """
        return self._titre

    @titre.setter
    def titre(self, titre: str):
        """Sets the titre of this Cours.

        Titre du cours  # noqa: E501

        :param titre: The titre of this Cours.
        :type titre: str
        """

        self._titre = titre

    @property
    def discipline(self) -> str:
        """Gets the discipline of this Cours.

        Discipline associée au cours  # noqa: E501

        :return: The discipline of this Cours.
        :rtype: str
        """
        return self._discipline

    @discipline.setter
    def discipline(self, discipline: str):
        """Sets the discipline of this Cours.

        Discipline associée au cours  # noqa: E501

        :param discipline: The discipline of this Cours.
        :type discipline: str
        """

        self._discipline = discipline

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this Cours.

        Tags associés au cours  # noqa: E501

        :return: The tags of this Cours.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this Cours.

        Tags associés au cours  # noqa: E501

        :param tags: The tags of this Cours.
        :type tags: List[str]
        """

        self._tags = tags
