/*
 * API de Gestion des Cours en Ligne - OpenAPI 3.0
 * Ceci est une API permettant de gérer le contenu des cours en ligne. Elle expose des fonctionnalités pour créer, consulter, mettre à jour, et supprimer des cours et leurs séances. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@exemple.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Cours
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-11-11T15:14:48.525836921Z[GMT]")

public class Cours {
  @SerializedName("id")
  private String id = null;

  @SerializedName("titre")
  private String titre = null;

  @SerializedName("discipline")
  private String discipline = null;

  @SerializedName("tags")
  private List<String> tags = null;

  public Cours id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifiant unique du cours
   * @return id
  **/
  @Schema(description = "Identifiant unique du cours")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Cours titre(String titre) {
    this.titre = titre;
    return this;
  }

   /**
   * Titre du cours
   * @return titre
  **/
  @Schema(description = "Titre du cours")
  public String getTitre() {
    return titre;
  }

  public void setTitre(String titre) {
    this.titre = titre;
  }

  public Cours discipline(String discipline) {
    this.discipline = discipline;
    return this;
  }

   /**
   * Discipline associée au cours
   * @return discipline
  **/
  @Schema(description = "Discipline associée au cours")
  public String getDiscipline() {
    return discipline;
  }

  public void setDiscipline(String discipline) {
    this.discipline = discipline;
  }

  public Cours tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Cours addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Tags associés au cours
   * @return tags
  **/
  @Schema(description = "Tags associés au cours")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cours cours = (Cours) o;
    return Objects.equals(this.id, cours.id) &&
        Objects.equals(this.titre, cours.titre) &&
        Objects.equals(this.discipline, cours.discipline) &&
        Objects.equals(this.tags, cours.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, titre, discipline, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cours {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    titre: ").append(toIndentedString(titre)).append("\n");
    sb.append("    discipline: ").append(toIndentedString(discipline)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
